<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A-CODE-WALL</title>
  <icon>http://example.com/icon.png</icon>
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-10T10:02:34.490Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>blues</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>萌萌哒的Live2D看板娘入驻博客</title>
    <link href="http://example.com/2021/04/10/%E8%90%8C%E8%90%8C%E5%93%92%E7%9A%84Live2D%E7%9C%8B%E6%9D%BF%E5%A8%98%E5%85%A5%E9%A9%BB%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2021/04/10/%E8%90%8C%E8%90%8C%E5%93%92%E7%9A%84Live2D%E7%9C%8B%E6%9D%BF%E5%A8%98%E5%85%A5%E9%A9%BB%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-04-10T05:49:22.000Z</published>
    <updated>2021-04-10T10:02:34.490Z</updated>
    
    <content type="html"><![CDATA[<p>自从把博客搭建好之后，就开始在捣腾博客的路上越走越远，想像着怎么让博客越来越精美，尽量保持简约的风格，但又不失有一些活泼的元素存在，不至于整个博客的风格太过于冷色调（喂！博客的重点在于内容啊，是不是本末倒置了？），emmm····，<del>但是赏心悦目的博客才能保持足够的写作动力啊！</del>（借口）</p><p>某天闲暇之余在逛博客的时候，发现别人的博客底下有这么个可爱的二次元小萝莉，一下子就喜欢上了，查阅了资料发现这叫<strong>“看板娘”</strong>，想像着我的博客底下也有一个萌萌哒的看板娘陪伴着，那真是太幸福了，就决定将看板娘抱回家（：</p><div style="margin:auto"><img src="/2021/04/10/%E8%90%8C%E8%90%8C%E5%93%92%E7%9A%84Live2D%E7%9C%8B%E6%9D%BF%E5%A8%98%E5%85%A5%E9%A9%BB%E5%8D%9A%E5%AE%A2/3d76ded499c111eba8b30242ac130003.png" class=""></div><span id="more"></span><h1 id="Live2D看板娘入驻博客"><a href="#Live2D看板娘入驻博客" class="headerlink" title="Live2D看板娘入驻博客"></a>Live2D看板娘入驻博客</h1><p>研究了下如何将看板娘引入博客，对于博客小白来说，还挺简单的，以下是两种方式：</p><ul><li>在博客页面引入看板娘代码依赖。</li><li>使用Hexo第三方组件引入。</li></ul><h2 id="博客页面引入看板娘依赖"><a href="#博客页面引入看板娘依赖" class="headerlink" title="博客页面引入看板娘依赖"></a>博客页面引入看板娘依赖</h2><h3 id="Live2D-Widget"><a href="#Live2D-Widget" class="headerlink" title="Live2D Widget"></a>Live2D Widget</h3><p>Live2D Widget的作者们将看板娘的源代码开源在GitHub上，在阅读了文档后发现，对于小白来说使用非常的简单，只需要2行代码即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将以上两行代码加入到博客页面的<code>&lt;head&gt;&lt;/head&gt;</code>标签内，即可拥有官方提供的看板娘，当然，如果要对看板娘进行定制化就没那么简单啦。</p><h3 id="博客页面添加依赖"><a href="#博客页面添加依赖" class="headerlink" title="博客页面添加依赖"></a>博客页面添加依赖</h3><p>/themes/next/layout/_layout.njk</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;&#123;&#123; page.lang &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  &#123;&#123; partial(&#x27;_partials/head/head.njk&#x27;, &#123;&#125;, &#123;cache: theme.cache.enable&#125;) &#125;&#125;</span><br><span class="line">  &#123;%- include &#x27;_partials/head/head-unique.njk&#x27; -%&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;% block title %&#125;&#123;% endblock %&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  &#123;&#123; partial(&#x27;_third-party/analytics/index.njk&#x27;, &#123;&#125;, &#123;cache: theme.cache.enable&#125;) &#125;&#125;</span><br><span class="line">  &#123;&#123; partial(&#x27;_scripts/noscript.njk&#x27;, &#123;&#125;, &#123;cache: theme.cache.enable&#125;) &#125;&#125;</span><br><span class="line">  <span class="comment">&lt;!-- 添加看板娘依赖 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加依赖后重新启动博客，即可看到看板娘↓↓↓</p><div style="margin:auto"><img src="/2021/04/10/%E8%90%8C%E8%90%8C%E5%93%92%E7%9A%84Live2D%E7%9C%8B%E6%9D%BF%E5%A8%98%E5%85%A5%E9%A9%BB%E5%8D%9A%E5%AE%A2/67a6eb5a99d411eba8b30242ac130003.png" class=""></div><p>具体更详细的配置可查看GitHub上的<a href="https://github.com/stevenjoezhang/live2d-widget">官方文档</a>。</p><h2 id="Hexo第三方组件引入看板娘"><a href="#Hexo第三方组件引入看板娘" class="headerlink" title="Hexo第三方组件引入看板娘"></a>Hexo第三方组件引入看板娘</h2><h3 id="hexo-helper-live2d"><a href="#hexo-helper-live2d" class="headerlink" title="hexo-helper-live2d"></a>hexo-helper-live2d</h3><h3 id="使用hexo-helper-live2d组件引入看板娘的步骤如下："><a href="#使用hexo-helper-live2d组件引入看板娘的步骤如下：" class="headerlink" title="使用hexo-helper-live2d组件引入看板娘的步骤如下："></a>使用hexo-helper-live2d组件引入看板娘的步骤如下：</h3><h4 id="下载hexo-helper-live2d组件"><a href="#下载hexo-helper-live2d组件" class="headerlink" title="下载hexo-helper-live2d组件"></a>下载hexo-helper-live2d组件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-helper-live2d</span><br></pre></td></tr></table></figure><h4 id="下载live2d-model模型"><a href="#下载live2d-model模型" class="headerlink" title="下载live2d-model模型"></a>下载live2d-model模型</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add live2d-widget-model-shizuku</span><br></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>hexo/_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#是否启用live2d</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">node_modules/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-shizuku</span> <span class="comment">#下载的模型名称</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">left</span> <span class="comment">#模型显示位置</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">190</span> <span class="comment">#模型显示宽度</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">380</span> <span class="comment">#模型显示高度</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">false</span> <span class="comment">#移动端是否显示模型</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.9</span> <span class="comment">#模型透明度</span></span><br></pre></td></tr></table></figure><p>详细的配置参数说明可查看<a href="https://github.com/EYHN/hexo-helper-live2d">官方文档</a>。</p><p>重启博客，就可以看到萌萌哒的看板娘啦↓↓↓</p><div style="margin:auto"><img src="/2021/04/10/%E8%90%8C%E8%90%8C%E5%93%92%E7%9A%84Live2D%E7%9C%8B%E6%9D%BF%E5%A8%98%E5%85%A5%E9%A9%BB%E5%8D%9A%E5%AE%A2/ad04afa899dd11eba8b30242ac130003.png" class=""></div><h2 id="两种方式引入看板娘的对比"><a href="#两种方式引入看板娘的对比" class="headerlink" title="两种方式引入看板娘的对比"></a>两种方式引入看板娘的对比</h2><p>PS：<em>以下只是在以官方提供的简易引入方式的情况下的对比</em></p><ol><li><p>Live2D Widget</p><p>优点：</p><ul><li>看板娘支持更多的功能：切换模型/换装/游戏/拍照/隐藏；</li><li>适配度更高，可支持更多的应用场景；</li></ul><p>不足：</p><ul><li>无法自定义看板娘的展示位置，大小；</li></ul></li><li><p>hexo-helper-live2d</p><p>优点：</p><ul><li>可以自定义看板娘的展示位置等参数；</li></ul><p>不足：</p><ul><li>对于更换看板娘模型需要下载新的包，并重新配置；</li><li>组件只支持Hexo博客；</li></ul></li></ol><p>因为我发现Live2D Widget引入的看板娘模型，在小分辨率的屏幕下显示占比较大，而且我更喜欢看板娘静静的那种感觉，不需要太多的交互；这些需求在hexo-helper-live2d组件上刚好满足了，所有采用hexo-helper-live2d引入看板娘。</p><p>当然，如果有更高的定制化需求，基于GitHub开放的源码进行定制化开发是最合适的方式了，在此也要感谢开源作者们的开源精神才能让大家都能更方便的拥有萌萌哒的看板娘，Respect！</p><h2 id="引入PJAX局部刷新博客页面"><a href="#引入PJAX局部刷新博客页面" class="headerlink" title="引入PJAX局部刷新博客页面"></a>引入PJAX局部刷新博客页面</h2><p>在引入看板娘后，发现每当点击侧边导航栏后会跳转到新的页面，并重新刷新整个博客页面，这就导致了萌萌哒的看板娘又重新显示一遍。一想到萌萌哒的看板娘的微笑被我操作博客的动作给<strong>剥夺</strong>了（夸装），想想都是满满负罪感，这时候就需要让博客支持局部刷新，刚好<strong>Next主题</strong>已经对PJAX进行组合封装了，只需要配置就能让博客支持局部刷新，配置如下：</p><p>next/_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Easily enable fast Ajax navigation on your website.</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/next-theme/pjax</span></span><br><span class="line"><span class="attr">pjax:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>重新启动博客，博客就具备局部刷新的功能了，萌萌哒的看板娘的微笑被我守护下了XDD</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;自从把博客搭建好之后，就开始在捣腾博客的路上越走越远，想像着怎么让博客越来越精美，尽量保持简约的风格，但又不失有一些活泼的元素存在，不至于整个博客的风格太过于冷色调（喂！博客的重点在于内容啊，是不是本末倒置了？），emmm····，&lt;del&gt;但是赏心悦目的博客才能保持足够的写作动力啊！&lt;/del&gt;（借口）&lt;/p&gt;
&lt;p&gt;某天闲暇之余在逛博客的时候，发现别人的博客底下有这么个可爱的二次元小萝莉，一下子就喜欢上了，查阅了资料发现这叫&lt;strong&gt;“看板娘”&lt;/strong&gt;，想像着我的博客底下也有一个萌萌哒的看板娘陪伴着，那真是太幸福了，就决定将看板娘抱回家（：&lt;/p&gt;
&lt;div style=&quot;margin:auto&quot;&gt;&lt;img src=&quot;/2021/04/10/%E8%90%8C%E8%90%8C%E5%93%92%E7%9A%84Live2D%E7%9C%8B%E6%9D%BF%E5%A8%98%E5%85%A5%E9%A9%BB%E5%8D%9A%E5%AE%A2/3d76ded499c111eba8b30242ac130003.png&quot; class=&quot;&quot;&gt;&lt;/div&gt;</summary>
    
    
    
    <category term="博客" scheme="http://example.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="Blog" scheme="http://example.com/tags/Blog/"/>
    
    <category term="Live2D" scheme="http://example.com/tags/Live2D/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客搭建的简单记录和待办事项</title>
    <link href="http://example.com/2021/03/28/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95%E5%92%8C%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9/"/>
    <id>http://example.com/2021/03/28/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95%E5%92%8C%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9/</id>
    <published>2021-03-28T08:53:31.000Z</published>
    <updated>2021-04-10T10:02:34.466Z</updated>
    
    <content type="html"><![CDATA[<p>在2021年1月1日，我写下了[2020の备忘录]，同时也定下2021年需要完成的事项，其中之一就是「搭建个人博客，学习写作记录」。现在，2021年已经过了三分之一（不经感叹，时间真的过得好快），「博客」这件小事也算是初具雏形，那么就简单记录Hexo博客搭建的过程以及后续优化博客的待办事项吧。</p><div style="width:50%;height:50%;margin:auto"><img src="/2021/03/28/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95%E5%92%8C%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9/2e9fea24189f4d1b96965d44c105b431.jpg" class=""></div><span id="more"></span><h1 id="博客选择"><a href="#博客选择" class="headerlink" title="博客选择"></a>博客选择</h1><ul><li>第三方博客平台</li><li>自建博客<ul><li>Halo</li><li>Hexo</li></ul></li></ul><p>博客的选择分成两类，一类是直接使用第三方博客平台，优点是拿来即用，只需要关注内容输出，并且博客平台相当于是社区，撰写的文章更容易被别人阅读，相应的也更容易建立个人IP，缺点是文章内容是依托于第三方平台，不能完全掌控博客（最近，博客园被暂停使用，进行内容审查，像遇到这种事情的时候，就只能束手无策）。</p><p>另外一类是自建博客，分为动态博客和静态博客，动态博客，大概了解了Java语言实现的Halo博客，整体上搭建还是很简单方便的，有对应的后台系统以及整合了第三方插件，省心，不需要太多的折腾；静态博客，轻量级的Hexo博客，网络上有足够多的搭建教程，可玩性高，但是会比较折腾（：</p><p>我最终选择使用Hexo来自建博客。一步步的完善，优化博客的过程虽然会比较折腾，但是想想就让人激动！</p><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><ul><li>Platform：Windows 10</li><li>Node.js：v14.16.0（LTS）</li><li>Version Control：Git</li></ul><h1 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h1><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>使用yarn安装hexo-cli：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn global add hexo-cli</span><br></pre></td></tr></table></figure><p><strong>Tips</strong>：一开始是按照官方文档的npm来安装hexo-cli，但在后续引入GitHub-Actions做自动化集成，部署的时候需要用yarn-cache，npm就不支持了，需要再将npm转换成yarn。还有就是我在查找yarn和npm的区别是发现<em>yarn在性能上比npm高</em>，此处具体的差异分析可以通过Google进一步了解。</p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>初始化blog文件夹 -&gt; 进入文件夹 -&gt; yarn安装包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init hexo</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn install</span><br></pre></td></tr></table></figure><p>初始化完成后，hexo文件夹的目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── node_modules &#x2F;&#x2F;node模块</span><br><span class="line">├── scaffolds&#x2F;&#x2F;模板文件夹</span><br><span class="line">|   ├── draft.md</span><br><span class="line">|   ├── page.md</span><br><span class="line">|   └── post.mad</span><br><span class="line">├── source&#x2F;&#x2F;资源文件夹</span><br><span class="line">|   └── _posts&#x2F;&#x2F;文章文件夹</span><br><span class="line">├── themes&#x2F;&#x2F;主题文件夹</span><br><span class="line">├── .gitignore</span><br><span class="line">├── _config.landscape.yml&#x2F;&#x2F;landscape主题配置文件</span><br><span class="line">├── _config.yml&#x2F;&#x2F;hexo配置文件</span><br><span class="line">├── db.json</span><br><span class="line">├── package.json</span><br><span class="line">├── yarn.lock</span><br></pre></td></tr></table></figure><p>启动hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>如果使用的CMD命令行或是Git Bash显示如下信息，并且无ERROR报错，则表示搭建成功了，即可在浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a></p><blockquote><p>INFO  Hexo is running at <a href="http://localhost:4000/">http://localhost:4000</a> . Press Ctrl+C to stop.</p></blockquote><h2 id="Hexo常用的命令"><a href="#Hexo常用的命令" class="headerlink" title="Hexo常用的命令"></a>Hexo常用的命令</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init [folder]</span><br></pre></td></tr></table></figure><p>根据folder参数初始化站点文件夹，如果folder参数不提供，则在当前目录初始化。</p><h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>创建文章，如果不提供layout参数，则会根据_config.yml配置文件下的default_layout参数所对应的值进行创建，title表示文件名即文章的标题，需要用””引用。</p><p><strong>Tips</strong>：layout有对应的模板文件，可以修改post模板来生成统一的文章的整体结构。</p><table><thead><tr><th>可选参数</th><th>描述</th></tr></thead><tbody><tr><td>-p，–path</td><td>定制化文章的生成路径</td></tr><tr><td>-r，–replace</td><td>如果文章已存在，则会替换</td></tr><tr><td>-s，–slug</td><td>定制化文章的URL</td></tr></tbody></table><h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>在public文件夹下生成静态文件，使用<code>hexo g</code>也可以触发。</p><table><thead><tr><th>可选参数</th><th>描述</th></tr></thead><tbody><tr><td>-d，–deploy</td><td>生成静态文件并部署</td></tr><tr><td>-w，–watch</td><td>监视文件的变化</td></tr><tr><td>-b，–bail</td><td>在生成静态文件的过程中有任何未处理异常，则引发错误</td></tr><tr><td>-f，–force</td><td>强制重新生成静态文件</td></tr><tr><td>-c，–concurrency</td><td>并行生成静态文件</td></tr></tbody></table><h3 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>发布草稿文件，可先使用draft模板编写文章，再本地启动查看效果ok后，再将草稿文章进行发布。</p><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>启动本地服务，使用<code>hexo s</code>也能触发，默认浏览器路径是<a href="http://localhost:4000/%E3%80%82">http://localhost:4000/。</a></p><table><thead><tr><th>可选参数</th><th>描述</th></tr></thead><tbody><tr><td>-p，–port</td><td>当4000端口被占用的时候，重写默认的端口号</td></tr><tr><td>-s，–static</td><td>只启动静态文件</td></tr><tr><td>-l，–log</td><td>开启日志</td></tr></tbody></table><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>部署站点，使用<code>hexo d</code>也能触发。</p><table><thead><tr><th>可选参数</th><th>描述</th></tr></thead><tbody><tr><td>-g，–generate</td><td>在部署生成静态文件</td></tr></tbody></table><h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件（<code>db.json</code>）和已经生成的静态文件（<code>public</code>）。</p><h3 id="Debug-mode"><a href="#Debug-mode" class="headerlink" title="Debug mode"></a>Debug mode</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo --debug</span><br></pre></td></tr></table></figure><p>开启调试模式，这个命令在更新主题配置的时候可以使用，省去重新启动服务。</p><h2 id="更换Hexo主题"><a href="#更换Hexo主题" class="headerlink" title="更换Hexo主题"></a>更换Hexo主题</h2><p>Hexo提供了丰富的<a href="https://hexo.io/themes/">主题库</a>，我目前使用的主题是<strong>NexT</strong>。</p><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h3 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h3><p>修改hexo/_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><p>启动Hexo，查看主题是否生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s --debug</span><br></pre></td></tr></table></figure><p>具体的主题详细配置就不再说明，可查看yaml的注释也可查看<a href="https://theme-next.js.org/docs/">Next官方文档</a>。</p><h2 id="使用的第三方服务"><a href="#使用的第三方服务" class="headerlink" title="使用的第三方服务"></a>使用的第三方服务</h2><h3 id="hexo-deployer-git"><a href="#hexo-deployer-git" class="headerlink" title="hexo-deployer-git"></a>hexo-deployer-git</h3><blockquote><p>Git deployer plugin for Hexo.</p></blockquote><p>可一键部署到GitHub仓库的第三方Hexo插件，结合GitHub-Pages可方便在github.io上托管博客。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-deployer-git</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>编辑hexo/_config.yml</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  #仓库地址</span><br><span class="line">  repo: &lt;repository url&gt; # https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span><br><span class="line">  #分支，GitHub默认提交到gh-pages分支</span><br><span class="line">  branch: [branch]</span><br><span class="line">  #提交信息，默认信息：Site updated: &#123;&#123; now(&#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#125;&#125;</span><br><span class="line">  message: [message]</span><br></pre></td></tr></table></figure><p>具体文档：</p><ul><li><a href="https://github.com/hexojs/hexo-deployer-git">https://github.com/hexojs/hexo-deployer-git</a></li><li><a href="https://hexo.io/docs/one-command-deployment">https://hexo.io/docs/one-command-deployment</a></li></ul><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-feed"><a href="#hexo-generator-feed" class="headerlink" title="hexo-generator-feed"></a>hexo-generator-feed</h3><blockquote><p>Generate Atom 1.0 or RSS 2.0 feed.</p></blockquote><p>生成Atom或者RSS的第三方插件，为站点提供RSS订阅。</p><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-generator-feed</span><br></pre></td></tr></table></figure><h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p>编辑hexo/_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#开启feed</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span> <span class="comment">#feed类型，默认atom，支持atom和rss2，可同时支持两种类型</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span> <span class="comment">#路径，默认在/hexo下生成</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span><span class="comment">#feed.xml限制的最大posts文章数</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span> <span class="comment">#可选参数，&#x27;true&#x27;表示feed.xml中会包含文章内容在全部post下</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span> <span class="comment">#排序</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">icon.png</span> <span class="comment">#自定义feed图标</span></span><br><span class="line">  <span class="attr">autodiscovery:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">template:</span></span><br></pre></td></tr></table></figure><p>具体文档：<a href="https://github.com/hexojs/hexo-generator-feed">https://github.com/hexojs/hexo-generator-feed</a></p><h4 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line"><span class="comment"># 在public静态资源文件夹下生成feed对应的xml文件</span></span><br></pre></td></tr></table></figure><p>结合next/_config.yml配置，可在sidebar的social栏下提供RSS订阅</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="comment"># GitHub: https://github.com/yourname || fab fa-github</span></span><br><span class="line">  <span class="comment"># E-Mail: mailto:yourname@gmail.com || fa fa-envelope</span></span><br><span class="line">  <span class="attr">RSS:</span> <span class="string">/atom.xml</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-rss</span></span><br></pre></td></tr></table></figure><h3 id="hexo-generator-searchdb"><a href="#hexo-generator-searchdb" class="headerlink" title="hexo-generator-searchdb"></a>hexo-generator-searchdb</h3><blockquote><p>Seach data generator plugin for Hexo.</p></blockquote><p>搜索数据生成组件，为hexo博客提供搜索功能。</p><h4 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-generator-searchdb</span><br></pre></td></tr></table></figure><h4 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h4><p>编辑hexo/_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span> <span class="comment">#是否包含搜索文章内容</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure><p>具体文档：<a href="https://github.com/theme-next/hexo-generator-searchdb">https://github.com/theme-next/hexo-generator-searchdb</a></p><h4 id="生成-1"><a href="#生成-1" class="headerlink" title="生成"></a>生成</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line"><span class="comment"># 在public静态资源文件夹下生成search.xml文件</span></span><br></pre></td></tr></table></figure><p>结合next/_config.yml配置，可在菜单栏下生成搜索栏目。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="hexo-word-counter"><a href="#hexo-word-counter" class="headerlink" title="hexo-word-counter"></a>hexo-word-counter</h3><blockquote><p>Symbols count and time to read for articles in Hexo blog.</p></blockquote><p>统计博客文章的字数和计算阅读时长。</p><h4 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-word-counter</span><br></pre></td></tr></table></figure><h4 id="配置-3"><a href="#配置-3" class="headerlink" title="配置"></a>配置</h4><p>编辑hexo/_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span> <span class="comment">#是否显示字数统计</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span> <span class="comment">#是否显示阅读时长</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span> <span class="comment">#是否显示站点总字数</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span> <span class="comment">#是否显示站点阅读时长</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span> <span class="comment">#是否排除code代码块的字数计算</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span> <span class="comment">#平均字长，CN≈2，EN≈5，RU≈6</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span> <span class="comment">#每分钟字数，Slow≈200，Normal≈275，Fast≈350</span></span><br><span class="line">  <span class="attr">suffix:</span> <span class="string">&quot;mins.&quot;</span> <span class="comment">#阅读时长的后缀定义</span></span><br></pre></td></tr></table></figure><h4 id="生成-2"><a href="#生成-2" class="headerlink" title="生成"></a>生成</h4><p>运行<code>hexo s</code>查看本地环境下的文章是否有显示字数统计和阅读时长。</p><h2 id="博客部署方案"><a href="#博客部署方案" class="headerlink" title="博客部署方案"></a>博客部署方案</h2><p>博客在创建初期就构想了需要具备的功能：</p><ul><li>方便将博客源码迁移到其他电脑上，应急情况下不需要繁琐的配置就能在其他电脑上撰写博客。</li><li>能够做到源码同步，自动化的构建，部署。</li></ul><p>基于以上的需求，我使用GitHub来管理，备份博客源码，至于自动化部署在实现上的方案，在查找了以下几种方案：</p><ol><li><p>使用GitHub-Pages结合hexo-deployer-git组件在github.io上部署博客。</p></li><li><p>使用GitHub-Webhooks，再自己实现钩子脚本将博客部署到VPS。</p></li><li><p>使用GitHub-Actions来实现持续集成，部署到VPS。</p></li></ol><p>我采用了GitHub-Acitions来做一键部署博客的事情，感觉GitHub-Actions可玩性更高，也更适合做持续集成的事情，目前已经达成：只需要将博客源码提交到GitHub就能触发持续集成，将博客进行备份，且部署到VPS上，后续只需要查看站点的效果即可，我在后面会再详细记录目前采用的博客持续集成方案。</p><h2 id="优化博客的待办事项"><a href="#优化博客的待办事项" class="headerlink" title="优化博客的待办事项"></a>优化博客的待办事项</h2><ul><li><input disabled="" type="checkbox"> 优化站点的图片显示速度</li><li><input disabled="" type="checkbox"> 站点的域名绑定及HTTPS访问</li><li><input disabled="" type="checkbox"> 提供博客的评论功能</li><li><input disabled="" type="checkbox"> 设置站点的SEO</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在2021年1月1日，我写下了[2020の备忘录]，同时也定下2021年需要完成的事项，其中之一就是「搭建个人博客，学习写作记录」。现在，2021年已经过了三分之一（不经感叹，时间真的过得好快），「博客」这件小事也算是初具雏形，那么就简单记录Hexo博客搭建的过程以及后续优化博客的待办事项吧。&lt;/p&gt;
&lt;div style=&quot;width:50%;height:50%;margin:auto&quot;&gt;&lt;img src=&quot;/2021/03/28/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95%E5%92%8C%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9/2e9fea24189f4d1b96965d44c105b431.jpg&quot; class=&quot;&quot;&gt;&lt;/div&gt;</summary>
    
    
    
    <category term="博客" scheme="http://example.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="Blog" scheme="http://example.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Iphone7の换电初体験</title>
    <link href="http://example.com/2021/03/13/Iphone7%E3%81%AE%E6%8D%A2%E7%94%B5%E5%88%9D%E4%BD%93%E9%A8%93/"/>
    <id>http://example.com/2021/03/13/Iphone7%E3%81%AE%E6%8D%A2%E7%94%B5%E5%88%9D%E4%BD%93%E9%A8%93/</id>
    <published>2021-03-12T16:00:00.000Z</published>
    <updated>2021-04-10T10:02:34.470Z</updated>
    
    <content type="html"><![CDATA[<p>我的i7从使用到现在已经4年多了，他像一位老伙计一样，默默地陪伴着我，任劳任怨的受着我疯狂揉拧，眼见着他的身体逐渐被掏空（让我莫名想起了那个让男人看了都会流泪的广告），我内心很是不舍，所以这次决定给他更换一下零部件。该从哪里开始呢？当然是电池啦，好比男人的加油站（手动滑稽）。好了，回归正题，以下内容主要记录换电过程以及一些需要注意的点，还有换电之后的使用感受。</p><div style="width:50%;height:50%;margin:auto"><img src="/2021/03/13/Iphone7%E3%81%AE%E6%8D%A2%E7%94%B5%E5%88%9D%E4%BD%93%E9%A8%93/b8583cfafdac4d4f906523fc22f3816f.jpg" class=""></div><span id="more"></span><h1 id="换电のStep-one"><a href="#换电のStep-one" class="headerlink" title="换电のStep one"></a>换电のStep one</h1><p><strong><em>！！！</em></strong> <strong><em>Attention</em></strong> ：换电的第一步理所当然会想到是拧下手机和背板连接的显式螺丝（位于充电口旁边的两颗梅花螺丝）对不对？答案是错误，请注意，<strong>“手机关机” 才是第一步</strong>。</p><p>手机关机完毕了吧？那么可以开开心心的拧下两个梅花螺丝啦~</p><p>like this ↓↓↓ （请无视图片上那骨瘦如柴的手，我只是穷得吃不起饭，不过还剩下一口气 XXD)</p><div style="width:30%;height:30%;margin:auto"><img src="/2021/03/13/Iphone7%E3%81%AE%E6%8D%A2%E7%94%B5%E5%88%9D%E4%BD%93%E9%A8%93/62928d230b8808c7a0f00bb4591408d.jpg" class=""></div><p><strong>Tips 1</strong>：在用螺丝刀拧下螺丝的时候，可以用螺丝刀的顶部抵住掌心作为支撑点，再用拇指和食指转动螺丝刀，这样做的好处在于不那么容易让螺丝滑牙，对于质量和精密度没那么好的螺丝刀来说。</p><h1 id="换电のStep-two"><a href="#换电のStep-two" class="headerlink" title="换电のStep two"></a>换电のStep two</h1><h2 id="如何将屏幕和背板分离？"><a href="#如何将屏幕和背板分离？" class="headerlink" title="如何将屏幕和背板分离？"></a>如何将屏幕和背板分离？</h2><p>我们知道现在的手机屏幕和背板基本上是通过屏幕胶来黏合，我一直觉得这种组装方式对于拆机来说实在是有些麻烦和折腾，又一次感叹我的旧老友Iphone4s（Steve Jobs在世的最后一代产品）我就觉得那种组合模式很简单，对于拆装机来说，当然，你可以说它不支持防水（：</p><p>因为没有专业的软化屏幕胶的仪器，我这边选择使用吹风机来软化屏幕胶：开启电吹风 [加热模式] 沿着下半屏的边缘来回的（吹啊吹啊我的骄傲放纵…)，这边请注意要均匀的加热，不要一直固定吹同一个位置，防止屏幕受热坏掉，加热个5-7分钟就可以趁着余温用吸盘将屏幕和背板拉起一个小缝隙，然后用翘片卡位，再用撬棒沿着缝隙慢慢的划开啦，是不是很简单？其实我在分离屏幕和背板这一步花了好长时间，屏幕顶部位置的卡扣和背板连接的太紧了，我也不敢使用蛮劲，怕拉断屏幕和背板连接的排线，那就完蛋啦！TAT</p><h2 id="拧下螺丝，断开排线，彻底分离屏幕和背板"><a href="#拧下螺丝，断开排线，彻底分离屏幕和背板" class="headerlink" title="拧下螺丝，断开排线，彻底分离屏幕和背板"></a>拧下螺丝，断开排线，彻底分离屏幕和背板</h2><p>好了，已经可以掀开屏幕啦（终于看到老伙计的果照，有点小激动呢），但是请注意：<strong>屏幕排线和主板还连接着，你还必须得保持小心翼翼</strong>，在这里需要断开屏幕排线，电源排线，听筒排线。首先，需要先拧下固定电源排线上垫片的Y字螺丝（这里需要用到<strong>0.6的Y字螺丝刀</strong>，不要问我怎么知道的，有点小崩溃），接着，拧下固定听筒排线上的垫片的十字螺丝（这里需要用到<strong>十字螺丝刀</strong>），So Easy~，然后，用绝缘撬棒依次翘开这些排线连接，就大功告成啦，彻底分离屏幕和背板。</p><p><strong>Tips 2</strong>：在翘开这些连接排线的时候请使用绝缘撬棒，防止导电之类的会将主板击穿，那可能会得不偿失！</p><h1 id="换电のStep-three"><a href="#换电のStep-three" class="headerlink" title="换电のStep three"></a>换电のStep three</h1><h2 id="拆下震动模组，卸下电源"><a href="#拆下震动模组，卸下电源" class="headerlink" title="拆下震动模组，卸下电源"></a>拆下震动模组，卸下电源</h2><p>拆下震动模组的目的是为了更方便的拉掉电源胶，这里就不过多叙述了。震动模组拆下完毕，我们可以开始拔电源胶啦，好欢乐，这边首先是用不算太尖锐的武器戳开黏在电源上的电源胶开口，请小心，不要戳破电源了，这会很危险。然后就是水平的往外拉扯电源胶（这个步骤得重复三次），彻底执行完毕之后，电源和背板就算是彻底分离啦。</p><p>当然，如果遇到不顺畅的拉胶过程该怎么办？比如说拉胶拉到一半，胶断了，这时候的解决方案如下：</p><ul><li>用电吹风加热背板后盖电源位置（<strong>不是直吹电源正面，是吹反面</strong>），然后稍微撑开电源和底板的缝隙，用镊子将断掉的电源胶拉扯出来。</li><li>重新将手机按倒序组装回去，开机将电量用完，再暴力拆电源，当然暴力拆电源的时候也得小心。</li></ul><p>以上两种方案，我都没有尝试过，拉胶的过程还是蛮顺利的，假使遇到以上情况还是建议使用搜索引擎查找有无更合适的方案，安全第一。</p><p><strong>Tips 3</strong>：在拉电源胶的过程中如果遇到拽不动的情况，可以试着左右拉动电源胶，这样可以使电源胶松动。</p><p>彻底分离屏幕，电源，主板 ↓↓↓ </p><div style="width:50%;height:50%;margin:auto"><img src="/2021/03/13/Iphone7%E3%81%AE%E6%8D%A2%E7%94%B5%E5%88%9D%E4%BD%93%E9%A8%93/ba265efade2c43d7ade4f93bd27eebfc.jpg" class=""></div><h1 id="换电のStep-four"><a href="#换电のStep-four" class="headerlink" title="换电のStep four"></a>换电のStep four</h1><h2 id="拿出新电源，粘上新的电源胶，黏上背板"><a href="#拿出新电源，粘上新的电源胶，黏上背板" class="headerlink" title="拿出新电源，粘上新的电源胶，黏上背板"></a>拿出新电源，粘上新的电源胶，黏上背板</h2><p>给新电源粘上新电源胶的时候可以先固定电源胶的头部，再对齐黏到电源上，这一步<strong>请注意不要粘反了</strong>，黏到背板的时候可以先将电源排线稍微固定到接口（不用彻底插上电源排线）。我在将电源黏到背板的时候还是没有把握好上下的间距，这导致振动模组和电源的间隙过小，总感觉是这个原因导致现在手机震动的震感变强了（：</p><h1 id="换电のStep-five"><a href="#换电のStep-five" class="headerlink" title="换电のStep five"></a>换电のStep five</h1><h2 id="重新连接排线，锁上螺丝，贴上屏幕胶，逆序装机"><a href="#重新连接排线，锁上螺丝，贴上屏幕胶，逆序装机" class="headerlink" title="重新连接排线，锁上螺丝，贴上屏幕胶，逆序装机"></a>重新连接排线，锁上螺丝，贴上屏幕胶，逆序装机</h2><p>重新连接排线的时候，需要确认排线是否有连接好，是否有松动的问题，否则后续在开机后可能会导致开机异常和功能异常等问题，锁上螺丝，贴上屏幕胶这些小步骤就不再叙述了，怎么拆机就怎么装回去，还是很简单的，需要注意锁完螺丝后不要心急的将屏幕和背板扣紧，可以开机试完大致的手机功能都无异常之后再扣上屏幕和背板就大功告成了！</p><h1 id="结论和使用感受"><a href="#结论和使用感受" class="headerlink" title="结论和使用感受"></a>结论和使用感受</h1><p>对我来说，这是我首次给iphone换电的经历，我莫名的很享受这种硬件拆装的过程，总觉得将一个硬件由完整到拆分再到完整的过程带来的感觉很奇妙，这也是为什么我不把这种”麻烦事“交给专业的人来做的原因吧，其实这些很简单，对于很多人来说，只需要”胆大，心细“，我相信你也可以做到。已经装机使用一段时间了，总体感受，电池又耐用起来了，我的老伙计又回来啦，我们又可以一起度过接下去的一年或者是两年了，辛苦你了，哈哈哈~</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;我的i7从使用到现在已经4年多了，他像一位老伙计一样，默默地陪伴着我，任劳任怨的受着我疯狂揉拧，眼见着他的身体逐渐被掏空（让我莫名想起了那个让男人看了都会流泪的广告），我内心很是不舍，所以这次决定给他更换一下零部件。该从哪里开始呢？当然是电池啦，好比男人的加油站（手动滑稽）。好了，回归正题，以下内容主要记录换电过程以及一些需要注意的点，还有换电之后的使用感受。&lt;/p&gt;
&lt;div style=&quot;width:50%;height:50%;margin:auto&quot;&gt;&lt;img src=&quot;/2021/03/13/Iphone7%E3%81%AE%E6%8D%A2%E7%94%B5%E5%88%9D%E4%BD%93%E9%A8%93/b8583cfafdac4d4f906523fc22f3816f.jpg&quot; class=&quot;&quot;&gt;&lt;/div&gt;</summary>
    
    
    
    <category term="科技数码" scheme="http://example.com/categories/%E7%A7%91%E6%8A%80%E6%95%B0%E7%A0%81/"/>
    
    
    <category term="Iphone" scheme="http://example.com/tags/Iphone/"/>
    
  </entry>
  
</feed>
